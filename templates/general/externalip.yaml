{{- if .Values.K8sExternalIPs -}}
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sExternalIPs
metadata:
  name: external-ips-{{.Release.Name}}
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Service"]
    {{- if or (.Values.K8sExternalIPs.excludeNamespaces) (hasKey .Values.K8sExternalIPs "excludeGlobalNamespacesFlag")}}
    excludedNamespaces:
    {{- /* Check for globalimport include */ -}}
    {{- if hasKey .Values.K8sExternalIPs "excludeGlobalNamespacesFlag"}}
    {{- if .Values.K8sExternalIPs.excludeGlobalNamespacesFlag}}
    {{- range .Values.globalImport.excludeNamespaces}}
      - {{. | quote -}}
    {{end -}}
    {{end -}}
    {{- else if .Values.globalImport.excludeNamespacesDefaultFlag}}
    {{- range .Values.globalImport.excludeNamespaces}}
      - {{. | quote -}}
    {{end -}}
    {{end -}}
    {{- range .Values.K8sExternalIPs.excludeNamespaces}}
      - {{. | quote -}}
    {{end -}}
    {{end -}}
    {{/* Check if any scope is defined (Cluster/Namespace) */ -}}
    {{- if .Values.K8sExternalIPs.scope}}
    scope: 
    {{.Values.K8sExternalIPs.scope | quote -}}
    {{ end }}
  parameters:
    allowedIPs:
    {{- range .Values.K8sExternalIPs.parameters.allowedIPs}}
      - {{. -}}
    {{end -}}
{{- end -}}